package kr.co.test.controller;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.co.test.service.UserService;
import kr.co.test.vo.SignForm;
import kr.co.test.vo.User;

@Controller
public class UserController {
	
	@Autowired
	private UserService userService;
	
	@RequestMapping(value="/sign.test", method=RequestMethod.GET)
	public String sign(Model model){
		model.addAttribute("signForm", new SignForm());
		
		return "sign";
	}
	
	@RequestMapping(value="/sign.test", method=RequestMethod.POST)
	public String signUp(@Valid SignForm signForm, Errors errors) {
		
		
		if (errors.hasErrors()) {
			return "sign";
		}
		
		User user = new User();
		
		BeanUtils.copyProperties(signForm, user);
		
		userService.registerUser(user);
		
		return "redirect:/home.test";
	}
	
	@RequestMapping(value="/login.test", method=RequestMethod.GET)
	public String login(){
		return "login";
	}
	
	@RequestMapping(value="/login.test", method=RequestMethod.POST)
	public String userLogin(String id, String pwd, HttpSession){
		
		User user =  userService.getUserById(id);
		
		if (user == null) {
			throw new RuntimeException("존재하는 유저가 없습니다.");
		}
		
		if (!user.getPwd().equals(pwd)){
			throw new RuntimeException("존재하는 유저가 없습니다.");
		}
		
		
		
		return "home.test";
	}
}
