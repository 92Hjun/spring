<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html ng-app="todoApp">
<head>
<meta charset="UTF-8">
<link rel="stylesheet" href="resources/bootstrap/bootstrap.min.css">
<script type="text/javascript" src="resources/angular/angular.min.js"></script>
<title>Todo Application</title>
<script type="text/javascript">
	var todoApp = angular.module('todoApp', []);
	
	// 컨트롤러가 사용하는 공통기능이 정의되어 있는 서비스(Service)
	// 주로 서버와의 ajax 통신을 통한 데이터교환이 정의되어 있다.
	// 서비스는 싱글턴이다.
	todoApp.factory("TodoService", function($http){
		return {
			// 서버에서 모든 todo를 가져오는 기능
			getAllTodos:function(){
				return $http.get("todos/").then(function(response){
					return response.data;
				});
			},
			removeTodo:function(id){
				
			},
			getTodo:function(id){
				
			},
			saveTodo:function(todo){
				
			},
			updateTodo:function(todo){
				
			}
			
		}
		
	});
	
	// todo를 제어와 관련된 속성, 기능을 정의해놓은 컨트롤러
	// 화면 및 사용자와 상호작용한다.
	todoApp.controller("todoCtrl", function($scope, TodoService){
		// 화면에 표시할 할일 목록
		$scope.todoList = [];
		
		$scope.currentPage = 1;
		
		$scope.pageSize = 5;
		
		$scope.getTodoList = function(){
			TodoService.getAllTodos().then(function(data){
				$scope.todoList = data;
			});
		}
		
		$scope.getActiveClass = function(pageNo){
			return $scope.currentPage == pageNo ? "btn-primary" : "";
		}
		
		$scope.setCurrentPage = function(pageNo){
			$scope.currentPage = pageNo;
		}
		
		$scope.getTodoList();
		
	});
	
	// <tr ng-repeat="todo in todoList | range:1:5">
	todoApp.filter("range", function(){
		return function(data, page, size){
			var start_index = (page-1)*size;
			var end_index = page*size;
			
			return data.slice(start_index, end_index);
		}
	});
	
	/* 
		간단한 디렉티브
	todoApp.directive("navi", function(){
		return function(scope, element, attrs){
			
		}
	});
	
	 */
	// 디렉티브 정의하기
	todoApp.directive("navi", function(){
		return {
			scope: {
				rows:"@records"
			},
			restrict:"EA", // <navi /> <div navi> </div>
			template : "<ul class='pagination'><li ng-repeat='page in pages'><a>{{page+1}}</a></li></ul>",
			link:function(scope, element, attrs){
				var watchFn = function(warchScope){
					return watchScope.rows;
				}
			}
		}
	});
	
	
	/* 
	todoApp.filter("navi", function(){
		return function(data, size){
			var result = [];
			for (var i=0; i<Math.ceil(data.length/size); i++){
				result.push(i);
			}
			return result;
		}
	}); */
</script>
</head>
<body>
	<div class="container" ng-controller="todoCtrl">
		<h1>Todo Application</h1>
		
		<div class="row">
			<label>출력 갯수</label>
			<select ng-model="pageSize">
				<option value="5"> 5개씩 보기 </option>
				<option value="10"> 10개씩 보기 </option>
				<option value="20"> 20개씩 보기 </option>
			</select>
		</div>
		
		<table class="table">
			<thead>
				<tr>
					<td>id</td>
					<td>title</td>
					<td>date</td>
					<td>completed</td>
					<td></td>
				</tr>
			</thead>
			<tbody>
				<tr ng-repeat="todo in todoList | range:currentPage:pageSize">
					<td>{{todo.id}}</td>
					<td>{{todo.title}}</td>
					<td>{{todo.eventDate}}</td>
					<td>{{todo.completed}}</td>
					<td></td>
				</tr>
			</tbody>
		</table>
		<!-- 페이지 네이션 -->
		<div navi records="{{todoList.length}}">
		
		</div>
		<!-- 
		<div class="row text-right">
			<div class="btn-group">
				<a ng-repeat="page in todoList | navi:pageSize" ng-click="setCurrentPage(page+1)" ng-class="getActiveClass(page+1)" class="btn btn-default">{{page+1}}</a>
			</div>
		</div>
		 -->
	</div>
</body>
</html>